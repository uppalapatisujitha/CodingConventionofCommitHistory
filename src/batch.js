// Generated by CoffeeScript 1.10.0
(function() {
  var _, archiveDir, descriptionRule, fs, getOneDayAgo, helpers, hljs, http, logger, moment, parser, path, persistence, processRule, schedule, service, spawn, summarizeRule, timeline, zlib;

  logger = (require('./helpers')).logger;

  schedule = require('node-schedule');

  service = require('./service');

  helpers = require('./helpers');

  http = require('http');

  fs = require('fs');

  zlib = require('zlib');

  path = require('path');

  spawn = require('child_process').spawn;

  persistence = require('./persistence');

  timeline = require('./timeline');

  parser = require('./parser/parser');

  _ = require('underscore');

  hljs = require('highlight.js');

  moment = require('moment');

  archiveDir = __dirname + "/archive";

  fs.exists(archiveDir, function(exist) {
    if (!exist) {
      return fs.mkdirSync(archiveDir);
    }
  });

  processRule = new schedule.RecurrenceRule();

  processRule.hour = [new schedule.Range(0, 23)];

  processRule.minute = [10, 30, 50];

  schedule.scheduleJob(processRule, function() {
    return service.progressTimeline(function() {
      return logger.info("processTimeline is DONE!!!");
    });
  });

  summarizeRule = new schedule.RecurrenceRule();

  summarizeRule.hour = [new schedule.Range(0, 23)];

  summarizeRule.minute = [5, 25, 45];

  schedule.scheduleJob(summarizeRule, function() {
    return service.summarizeScore(function() {
      return logger.info("summarizeScore is DONE!!!");
    });
  });

  descriptionRule = new schedule.RecurrenceRule();

  descriptionRule.hour = [new schedule.Range(0, 23)];

  descriptionRule.minute = [0];

  schedule.scheduleJob(descriptionRule, function() {
    return service.findDescription(true, function() {});
  });

  getOneDayAgo = function() {
    return moment().add('d', -1).format("YYYY-MM-DD-H");
  };

}).call(this);
