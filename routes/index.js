// Generated by CoffeeScript 1.10.0
(function() {
  var service,moment, datetime;

  service = require('../src/service');
   moment = require('moment');



  exports.index = function(req, res) {
    return service.findDescription(false, function(err, desc) {
      if (err != null) {
        return res.send(500);
      } else {
        return res.render('index', {
          desc: desc
        });
      }
    });
  };

  
  exports.fetcharchive = function(req, res) {
   
    return service.fetchGithubArchive(datetime, function(err) {
      if (err != null) {
        return res.render('fetcharchive', {
          msg: 'Something is wrong!!!'
        });
      } else {
        return res.render('fetcharchive', {
          msg: 'Registred'
        });
      }
    });
  };

  exports.progressTimeline = function(req, res) {
    return service.progressTimeline(function() {
      return res.render('fetcharchive', {
        msg: 'progressed'
      });
    });
  };

  exports.summarizeScore = function(req, res) {
    return service.summarizeScore(function() {
      return res.render('fetcharchive', {
        msg: 'summarized'
      });
    });
  };

  exports.findScore = function(req, res) {
    return service.findScore(req.params.lang, function(err, data) {
      if (err == null) {
        return res.json(200, {
          results: data
        });
      } else if (err.message === (req.params.lang + " is not found")) {
        return res.json(404, {
          results: err.message
        });
      } else {
        logger.error("findScore", {
          err: err
        });
        return res.send(500);
      }
    });
  };

}).call(this);
